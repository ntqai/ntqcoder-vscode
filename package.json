{
  "name": "ntqcoder",
  "displayName": "NTQCoder: write and improve code using AI",
  "description": "Use NTQCoder inside the IDE to enhance and automate your coding with AI-powered assistance",
  "version": "1.1.2",
  "publisher": "NTQSolution",
  "icon": "resources/extensionIcon.png",
  "license": "MIT",
  "repository": {
    "url": "https://github.com/ntqai/ntqcoder-vscode"
  },
  "engines": {
    "vscode": "^1.73.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "ntqcoder",
    "openai",
    "gpt3",
    "gpt4",
    "copilot",
    "ai",
    "explain",
    "find bugs",
    "explain ",
    "refactor"
  ],
  "activationEvents": [
    "onView:ntqcoder.chatView",
    "onCommand:ntqcoder.ask",
    "onCommand:ntqcoder.explain",
    "onCommand:ntqcoder.refactor",
    "onCommand:ntqcoder.optimize",
    "onCommand:ntqcoder.findProblems",
    "onCommand:ntqcoder.documentation"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "ntqcoder.ask",
        "title": "Ask NTQCoder"
      },
      {
        "command": "ntqcoder.genunittest",
        "title": "NTQCoder: Generate unit test"
      },
      {
        "command": "ntqcoder.explain",
        "title": "NTQCoder: Explain selection"
      },
      {
        "command": "ntqcoder.refactor",
        "title": "NTQCoder: Refactor selection"
      },
      {
        "command": "ntqcoder.findProblems",
        "title": "NTQCoder: Find problems"
      },
      {
        "command": "ntqcoder.optimize",
        "title": "NTQCoder: Optimize selection"
      },
      {
        "command": "ntqcoder.documentation",
        "title": "NTQCoder: Write documentation"
      },
      {
        "command": "ntqcoder.resetConversation",
        "title": "Reset NTQCoder conversation"
      },
      {
        "command": "ntqcoder.tryAgain",
        "title": "Retry NTQCoder request"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "ntqcoder.ask",
          "when": "editorTextFocus",
          "group": "ntqcoder-menu-group@1"
        },
        {
          "command": "ntqcoder.genunittest",
          "when": "editorTextFocus",
          "group": "ntqcoder-menu-group@2"
        },
        {
          "command": "ntqcoder.explain",
          "when": "editorHasSelection",
          "group": "ntqcoder-menu-group@3"
        },
        {
          "command": "ntqcoder.refactor",
          "when": "editorHasSelection",
          "group": "ntqcoder-menu-group@4"
        },
        {
          "command": "ntqcoder.findProblems",
          "when": "editorHasSelection",
          "group": "ntqcoder-menu-group@5"
        },
        {
          "command": "ntqcoder.optimize",
          "when": "editorHasSelection",
          "group": "ntqcoder-menu-group@6"
        },
        {
          "command": "ntqcoder.documentation",
          "when": "editorHasSelection",
          "group": "ntqcoder-menu-group@7"
        }
      ],
      "commandPalette": [
        {
          "command": "ntqcoder.ask"
        },
        {
          "command": "ntqcoder.genunittest",
          "when": "editorHasSelection"
        },
        {
          "command": "ntqcoder.explain",
          "when": "editorHasSelection"
        },
        {
          "command": "ntqcoder.refactor",
          "when": "editorHasSelection"
        },
        {
          "command": "ntqcoder.findProblems",
          "when": "editorHasSelection"
        },
        {
          "command": "ntqcoder.optimize",
          "when": "editorHasSelection"
        },
        {
          "command": "ntqcoder.documentation",
          "when": "editorHasSelection"
        },
        {
          "command": "ntqcoder.resetConversation"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "ntqcoder",
          "title": "NTQCoder",
          "icon": "resources/icon.png"
        }
      ]
    },
    "views": {
      "ntqcoder": [
        {
          "type": "webview",
          "id": "ntqcoder.chatView",
          "name": "NTQCoder"
        }
      ]
    },
    "configuration": {
      "title": "NTQCoder",
      "type": "object",
      "properties": {
        "ntqcoder.apiKey": {
          "markdownDescription": "API key",
          "type": "string",
          "order": 0
        },
        "ntqcoder.apiUrl": {
          "markdownDescription": "API URL",
          "type": "string",
          "default": "https://api.ntq.ai/codentq/v1",
          "order": 1
        },
        "ntqcoder.model": {
          "type": "string",
          "enum": [
            "deepseek-coder"
          ],
          "default": "deepseek-coder",
          "description": "Which GPT model to use",
          "order": 1
        },
        "ntqcoder.pasteOnClick": {
          "type": "boolean",
          "default": true,
          "description": "Paste the code from a codeblock inside the response into the editor when you click on it",
          "order": 2
        },
        "ntqcoder.promptPrefix.genunittest": {
          "type": "string",
          "default": "Generate a unit test for this code: ",
          "description": "The prompt prefix used for generating the unit test for the selected code",
          "order": 3
        },
        "ntqcoder.promptPrefix.explain": {
          "type": "string",
          "default": "Explain what this code does: ",
          "description": "The prompt prefix used for explaining the selected code",
          "order": 3
        },
        "ntqcoder.promptPrefix.refactor": {
          "type": "string",
          "default": "Refactor this code and explain what's changed: ",
          "description": "The prompt prefix used for refactoring the selected code",
          "order": 4
        },
        "ntqcoder.promptPrefix.findProblems": {
          "type": "string",
          "default": "Find problems with the following code, fix them and explain what was wrong (Do not change anything else, if there are no problems say so): ",
          "description": "The prompt prefix used for finding problems in the selected code",
          "order": 5
        },
        "ntqcoder.promptPrefix.documentation": {
          "type": "string",
          "default": "Write documentation for the following code: ",
          "description": "The prompt prefix used for writing documentation for the selected code",
          "order": 7
        },
        "ntqcoder.promptPrefix.optimize": {
          "type": "string",
          "default": "Optimize the following code if there is anything to improve, if not say so: ",
          "description": "The prompt prefix used for optimizing the selected code",
          "order": 6
        },
        "ntqcoder.keepConversation": {
          "type": "boolean",
          "default": true,
          "description": "Keep the conversation going by using the same conversation ID for all requests (allows follow-up questions)",
          "order": 8
        },
        "ntqcoder.timeoutLength": {
          "type": "number",
          "default": "120",
          "description": "How long should the request wait for a response before timing out (in seconds)",
          "order": 9
        },
        "ntqcoder.selectedInsideCodeblock": {
          "type": "boolean",
          "default": true,
          "description": "Append selected code as a codeblock (```...code...```) instead of plain text",
          "order": 10
        },
        "ntqcoder.codeblockWithLanguageId": {
          "type": "boolean",
          "default": true,
          "description": "Append language id of the selected code to the codeblock (```language...code...```)",
          "order": 11
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "yarn run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "yarn run compile-tests && yarn run compile && yarn run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "update-package-lock": "npm install --package-lock-only"
  },
  "devDependencies": {
    "@types/glob": "^8.0.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.73.0",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "@vscode/test-electron": "^2.2.0",
    "eslint": "^8.28.0",
    "glob": "^8.0.3",
    "mocha": "^10.1.0",
    "ts-loader": "^9.4.1",
    "typescript": "^4.9.3",
    "webpack": "^5.75.0",
    "webpack-cli": "^5.0.0"
  },
  "dependencies": {
    "chatgpt": "^5.2.2",
    "gpt3-tokenizer": "^1.1.5",
    "node-fetch": "^3.3.0",
    "yarn": "^1.22.21"
  }
}
